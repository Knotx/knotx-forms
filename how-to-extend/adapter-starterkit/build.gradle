/*
 * Copyright (C) 2018 Knot.x Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
  id 'io.spring.dependency-management' version '1.0.5.RELEASE'
  id 'java'
}
allprojects {
  repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url "https://oss.sonatype.org/content/groups/staging/" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
  }
}

defaultTasks = ['build']
description = 'Forms Adapter Starter-kit'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  options.compilerArgs << '-Xlint:deprecation'
  options.incremental = true
}

dependencyManagement {
  imports {
    mavenBom "io.knotx:knotx-dependencies:${knotxVersion}"
  }
}

dependencies {
  compileOnly "io.knotx:knotx-dependencies:${knotxVersion}"

  compileOnly 'io.knotx:knotx-forms-api'
  compileOnly 'io.vertx:vertx-core'
  compileOnly 'io.vertx:vertx-codegen'

  // Test dependencies
  testCompile 'io.knotx:knotx-forms-api'
  testCompile 'io.knotx:knotx-junit5'

  testCompileOnly 'io.vertx:vertx-codegen'
  testCompile 'io.vertx:vertx-junit5'

  testCompile 'org.junit.jupiter:junit-jupiter-api'
  testCompile 'org.junit.jupiter:junit-jupiter-engine'


}
sourceSets {
  main {
    java {
      srcDirs += 'src/main/generated'
    }
  }
  test {
    resources {
      srcDirs += 'src/test/resources'
    }
  }
}

clean.doFirst {
  file('src/main/generated').deleteDir()
}

task annotationProcessing(type: JavaCompile, group: 'build') { // codegen
  source = sourceSets.main.java
  classpath = configurations.compile + configurations.compileOnly
  destinationDir = project.file('src/main/generated')
  options.compilerArgs = [
      "-proc:only",
      "-processor", "io.vertx.codegen.CodeGenProcessor",
      "-Acodegen.output=${destinationDir.absolutePath}"
  ]
}

task annotationProcessingCleanup() {
  doLast {
    delete "${project.projectDir}/src/main/generated"
    println "Removing: ${project.projectDir}/src/main/generated"
  }
}

annotationProcessing.dependsOn annotationProcessingCleanup

test {
  useJUnitPlatform()

  systemProperties = [
      'vertx.logger-delegate-factory-class-name': 'io.vertx.core.logging.SLF4JLogDelegateFactory'
  ]
}

compileJava.dependsOn annotationProcessing
